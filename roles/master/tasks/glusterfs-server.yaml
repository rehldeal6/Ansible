---

- name: install heketi CLI
  become: yes
  become_user: root
  unarchive:
    src: "https://github.com/heketi/heketi/releases/download/{{ heketi_version }}/heketi-client-{{ heketi_version }}.linux.{{ heketi_arch }}.tar.gz"
    extra_opts:
      - "--strip-components=2"
      - "heketi-client/bin/heketi-cli"
    dest: /usr/local/bin/
    mode: 0755
    remote_src: yes

- name: pull gluster-kubernetes
  git:
    repo: https://github.com/gluster/gluster-kubernetes.git
    dest: "{{ k8s_directory }}/gluster-kubernetes"
    force: true
    version: "{{ gluster_k8s_version }}"

- replace:
    path: "{{ k8s_directory }}/gluster-kubernetes/deploy/kube-templates/glusterfs-daemonset.yaml"
    regexp: 'gluster/gluster-centos:latest'
    replace: "{{ glusterfs_image }}"

- replace:
    path: "{{k8s_directory}}/gluster-kubernetes/deploy/kube-templates/heketi-deployment.yaml"
    regexp: 'heketi/heketi:dev'
    replace: "{{ heketi_image }}"
- replace:
    path: "{{ k8s_directory }}/gluster-kubernetes/deploy/kube-templates/deploy-heketi-deployment.yaml"
    regexp: 'heketi/heketi:dev'
    replace: "{{ heketi_image }}"
- replace:
    path: "{{ k8s_directory }}/gluster-kubernetes/deploy/gk-deploy"
    regexp: 'setup-openshift-heketi-storage'
    replace: 'setup-openshift-heketi-storage --image {{ heketi_image }}'

- name: template topology file
  template:
    src: topology.json.j2
    dest: "{{ k8s_directory }}/gluster-kubernetes/"
    owner: root
    group: root
    mode: "0644"

- name: run gk-deploy
  command: >
    ./gk-deploy
    --deploy-gluster
    --cli kubectl
    --namespace kube-system
    --admin-key '{{ glusterfs_admin_key }}'
    --user-key '{{ glusterfs_user_key }}'
    --no-object
    -y
    "{{ k8s_directory }}/gluster-kubernetes//topology.json"
  args:
    chdir: "{{ k8s_directory }}/gluster-kubernetes/deploy/"
  environment:
    KUBECONFIG: "{{ k8s_directory }}/.kube/config"

- name: get heketi endpoint var
  shell: kubectl -n kube-system get service heketi --template {%raw%} 'http://{{.spec.clusterIP}}:{{(index .spec.ports 0).port}}' {%endraw%}
  register: heketi_endpoint

- name: store endpoint into HEKETI_CLI_SERVER
  set_fact:
    HEKETI_CLI_SERVER: "{{ heketi_endpoint.stdout }}"

- name: template storage class file
  template:
    src: storage-class.yml
    dest: "{{ k8s_directory }}/glusterfs-kubernetes/storage-class.yml"
    owner: root
    group: root
    mode: "0644"

- name: create StorageClass
  k8s:
    src: "{{ k8s_directory }}/glusterfs-kubernetes/storage-class.yml
